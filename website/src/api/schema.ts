/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Read Root
         * @description Endpoint de santé de l'API.
         */
        get: operations["read_root_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quiz/get_random_snippet/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Random Snippet By Level Route
         * @description Récupère un snippet de code aléatoire avec ses réponses possibles.
         */
        get: operations["get_random_snippet_by_level_route_quiz_get_random_snippet__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats/snippets/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Snippets Count
         * @description Retourne le nombre total de snippets disponibles.
         */
        get: operations["get_snippets_count_stats_snippets_count_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * Snippet
         * @example {
         *       "answer_id": 0,
         *       "choices": [
         *         "9",
         *         "12",
         *         "14",
         *         "15"
         *       ],
         *       "explanation": "Le code crée une liste `notes` contenant quatre éléments. En Python, l'indexation des listes commence à 0, donc `notes[0]` vaut 12, `notes[1]` vaut 15, et `notes[2]` vaut 9. Le print affiche donc la valeur à l'index 2, qui est 9.\n\nL'indexation des listes en Python est basée sur un système zéro-indexé, ce qui signifie que le premier élément a l'index 0. Cette propriété est fondamentale dans la manipulation des listes, car elle permet un accès direct et rapide à un élément en utilisant un entier représentant sa position.",
         *       "language": "Python",
         *       "level": "BEGINNER",
         *       "snippet": "notes = [12, 15, 9, 14]\nprint(notes[2])",
         *       "theme": "Listes"
         *     }
         */
        Snippet: {
            /** Language */
            language: string;
            /** Level */
            level: string;
            /** Theme */
            theme: string;
            /** Snippet */
            snippet: string;
            /** Choices */
            choices: string[];
            /** Answer Id */
            answer_id: number;
            /** Explanation */
            explanation: string;
        };
        /** SnippetsCount */
        SnippetsCount: {
            /** Total Snippets */
            total_snippets: number;
            /** Snippets Per Language Level */
            snippets_per_language_level: {
                [key: string]: {
                    [key: string]: number;
                };
            };
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    read_root_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_random_snippet_by_level_route_quiz_get_random_snippet__get: {
        parameters: {
            query: {
                language: string;
                level: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Snippet"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_snippets_count_stats_snippets_count_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SnippetsCount"];
                };
            };
        };
    };
}
